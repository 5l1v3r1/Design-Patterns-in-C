{% extends '_source.jinja' %}

{% block ops_func -%}
{% for func_rtn, func, func_params in members %}
{%- if func_params %}
static {{ func_rtn }} {{ name }}_ops_{{ func }}(struct {{ name }} *{{ name }}, {{ func_params }})
{
	printf("{{ name }}::{{ func }}()\n");
}
{%- else %}
static {{ func_rtn }} {{ name }}_ops_{{ func }}(struct {{ name }} *{{ name }})
{
	printf("{{ name }}::{{ func }}()\n");
}
{% endif %}
{% endfor %}
{% endblock ops_func %}

{% block ops_func_set -%}
{% endblock ops_func_set %}

{% block init -%}
{% endblock init %}


static struct {{ name }}_ops {{ name }}_ops = { /* NULL is virtual method */
	.prepare = {{ name }}_ops_prepare,
};

void {{ name }}_init(struct {{ name }} *{{ name }})
{
	{{ name }}->ops = &{{ name }}_ops;
}

