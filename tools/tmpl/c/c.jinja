{%- extends '_source.jinja' -%}
{%- import '_macro.jinja' as func -%}

{% block file_header %}{% if add_file_header -%}
	{{- func.file_header(file_header_name,copyright,author,date,summary) -}}
{% endif %}{% endblock %}

{%- block private_method -%}
{{ func.macro_loop_functions(name,methods,'methods',mode='impl-print',scope='private',qualifier='static') }}
{%- endblock -%}

{%- block vtable_impl -%}
{{ func.macro_loop_functions(name,virtuals,'virtuals',mode='impl-print',qualifier='static') }}
{%- endblock -%}

{%- block vtable_set %}
static struct {{ name }}_ops {{ name }}_ops = {
	{{- func.macro_loop_functions(name,virtuals,'virtuals',mode='assign') }}
};
{%- endblock -%}


{%- block supers -%}{%- if supers -%}
{%- for parent_name,parent_vtables in supers.iteritems() -%}
	{%- set outer_loop = loop -%}
	{%- set func_postfix = '' -%}

	{%- for vtable_class_name,vtable_class_detail in parent_vtables.iteritems() -%}
		{%- if outer_loop.index > 1 -%}{%- set func_postfix = outer_loop.index -%}{%- endif -%}
	{{- func.macro_loop_functions(name,vtable_class_detail['virtuals'],'virtuals',mode='impl-print',abstract_name=vtable_class_name,qualifier='static',postfix=func_postfix) }}
{# parent ops #}
static struct {{ vtable_class_name }}_ops {{ vtable_class_name }}_ops = {
	{{- func.macro_loop_functions(name,vtable_class_detail['virtuals'],'virtuals',mode='assign',abstract_name=vtable_class_name,postfix=func_postfix) }}
};
{# end parent ops #}
	{%- endfor -%}
{%- endfor -%}
{%- endif -%}{%- endblock -%}


{%- block init -%}
{# init implement #}
void {{ name }}_init(struct {{ name }} *{{ name }})
{
	memset({{ name }}, sizeof(*{{ name }}), 0);
{%- if supers -%}
{%- for parent_name,parent_vtables in supers.iteritems() %}
	{{ parent_name }}_init(&{{ name }}->{{ parent_name }});
	{%- for vtable_class_name,vtable_class_detail in parent_vtables.iteritems() %}
	{% if vtable_class_detail['_have_super_ref'] -%}CLASS_OPS_INIT_SUPER{%- else -%}CLASS_OPS_INIT{%- endif -%}
({{ name }}->{{ vtable_class_detail['detail'] }}.ops, {{ vtable_class_name }}_ops);
	{%- endfor -%}
{%- endfor -%}
{% endif -%}

{%- if _have_vtable_new %}
	{{ name }}->ops = &{{ name }}_ops;
{%- endif %}
}
{# end init implement #}
{%- endblock -%}

{%- block public_method -%}
	{{- func.macro_loop_functions(name,methods,'methods',mode='impl-print',scope='public') }}
{%- endblock -%}
